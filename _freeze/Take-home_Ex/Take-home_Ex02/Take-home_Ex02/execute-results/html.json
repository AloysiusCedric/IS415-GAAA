{
  "hash": "c1d46df25a0f270da3dd9a2ec8afa2c3",
  "result": {
    "markdown": "---\ntitle: \"Take Home Exercise 2\"\nexecute:\n  freeze: true\n  warning: false\n  \nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n---\n\n\n# 1.0 Background\n\nDengue Hemorrhagic Fever (in short dengue fever) is one of the most widespread mosquito-borne diseases in the most tropical and subtropical regions. It is an acute disease caused by dengue virus infection which is transmitted by female Aedes aegypti and Aedes albopictus mosquitoes. In 2015, Taiwan had recorded the most severe dengue fever outbreak with more than 43,000 dengue cases and 228 deaths. Since then, the annual reported dengue fever cases were maintained at the level of not more than 200 cases. However, in 2023, Taiwan recorded 26703 dengue fever cases. Figure below reveals that more than 25,000 cases were reported at Tainan City.\n\n# 2.0 Objectives\n\nAs a curious geospatial analytics green horn, you are interested to discover:\n\nif the distribution of dengue fever outbreak at Tainan City, Taiwan are independent from space and space and time. If the outbreak is indeed spatial and spatio-temporal dependent, then, you would like to detect where are the clusters and outliers, and the emerging hot spot/cold spot areas.\n\n# 3.0 Task\n\nThe specific tasks of this take-home exercise are as follows:\n\nUsing appropriate function of sf and tidyverse, preparing the following geospatial data layer: a study area layer in sf polygon features. It must be at village level and confined to the D01, D02, D04, D06, D07, D08, D32 and D39 counties of Tainan City, Taiwan. a dengue fever layer within the study area in sf point features. The dengue fever cases should be confined to epidemiology week 31-50, 2023. a derived dengue fever layer in spacetime s3 class of sfdep. It should contain, among many other useful information, a data field showing number of dengue fever cases by village and by epidemiology week. Using the extracted data, perform global spatial autocorrelation analysis by using sfdep methods. Using the extracted data, perform local spatial autocorrelation analysis by using sfdep methods. Using the extracted data, perform emerging hotspot analysis by using sfdep methods. Describe the spatial patterns revealed by the analysis above.\n\n# 4.0 Loading packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman:: p_load(sf, sfdep, tmap, tidyverse, readxl, spdep, dplyr, lubridate, plotly, kendall, spacetime)\n```\n:::\n\n\n# 5.0 Cleaning and Loading data\n\nLoading the Taiwan Dengue dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\ndengue = read_csv(\"data/aspatial/Dengue_Daily.csv\")\n```\n:::\n\n\nLoading the Taiwan Village dataset,\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\nvillage = st_read(dsn=\"data/geospatial\" , layer = \"TAINAN_VILLAGE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `TAINAN_VILLAGE' from data source \n  `C:\\AloysiusCedric\\IS415-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n```\n:::\n:::\n\n\nInspecting the taiwan dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(village)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCoordinate Reference System:\n  User input: TWD97 \n  wkt:\nGEOGCRS[\"TWD97\",\n    DATUM[\"Taiwan Datum 1997\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.\"],\n        BBOX[17.36,114.32,26.96,123.61]],\n    ID[\"EPSG\",3824]]\n```\n:::\n:::\n\n\nOur data set is in EPSG: 3824.\n\nWe are only going to use the village data from the following Tainan counties: D01, D02, D04, D06, D07, D08, D32 and D39\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\nvillage = village %>% filter(TOWNID %in% c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\"))\n```\n:::\n\n\nVisualising the village dataset that is confined to the Tainan counties of D01, D02, D04, D06, D07, D08, D32 and D39.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\nplot(st_geometry(village))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\nglimpse(dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 106,861\nColumns: 26\n$ 發病日             <date> 1998-01-02, 1998-01-03, 1998-01-13, 1998-01-15, 19…\n$ 個案研判日         <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 通報日             <date> 1998-01-07, 1998-01-14, 1998-02-18, 1998-01-23, 19…\n$ 性別               <chr> \"男\", \"男\", \"男\", \"男\", \"男\", \"男\", \"男\", \"女\", \"女…\n$ 年齡層             <chr> \"40-44\", \"30-34\", \"55-59\", \"35-39\", \"55-59\", \"20-24…\n$ 居住縣市           <chr> \"屏東縣\", \"屏東縣\", \"宜蘭縣\", \"高雄市\", \"宜蘭縣\", \"…\n$ 居住鄉鎮           <chr> \"屏東市\", \"東港鎮\", \"宜蘭市\", \"苓雅區\", \"五結鄉\", \"…\n$ 居住村里           <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 最小統計區         <chr> \"A1320-0136-00\", \"A1303-0150-00\", \"A0201-0449-00\", …\n$ 最小統計區中心點X  <chr> \"120.505898941\", \"120.453657460\", \"121.751433765\", …\n$ 最小統計區中心點Y  <chr> \"22.464206650\", \"22.466338948\", \"24.749214667\", \"22…\n$ 一級統計區         <chr> \"A1320-04-008\", \"A1303-09-007\", \"A0201-23-006\", \"A6…\n$ 二級統計區         <chr> \"A1320-04\", \"A1303-09\", \"A0201-23\", \"A6408-10\", \"A0…\n$ 感染縣市           <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 感染鄉鎮           <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 感染村里           <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 是否境外移入       <chr> \"否\", \"是\", \"是\", \"否\", \"否\", \"是\", \"否\", \"否\", \"是…\n$ 感染國家           <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 確定病例數         <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ 居住村里代碼       <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 感染村里代碼       <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 血清型             <chr> \"None\", \"第二型\", \"None\", \"None\", \"None\", \"None\", \"…\n$ 內政部居住縣市代碼 <chr> \"10013\", \"10013\", \"10002\", \"64\", \"10002\", \"68\", \"65…\n$ 內政部居住鄉鎮代碼 <chr> \"1001301\", \"1001303\", \"1000201\", \"6400800\", \"100020…\n$ 內政部感染縣市代碼 <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 內政部感染鄉鎮代碼 <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n```\n:::\n:::\n\n\nFiltering the dengue data to only include the data from Tainan City\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\ndengue = dengue %>% filter(居住縣市==\"台南市\")\n```\n:::\n\n\nFiltering the dengue data to only include the columns 發病日, 最小統計區中心點X, 最小統計區中心點Y\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\ndengue = dengue %>% select(發病日, 最小統計區中心點X, 最小統計區中心點Y)\n```\n:::\n\n\nRemoving None value from x and y coor so that we can combine the x and y coor to create a geometry column\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\n\ndengue = dengue %>% filter(!(最小統計區中心點X==\"None\") & !(最小統計區中心點Y==\"None\"))\n```\n:::\n\n\nCreateing a geometry column for the dengue data, so that we can intersect it with the village data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\n\ndengue = st_as_sf(dengue, coords = c(\"最小統計區中心點X\", \"最小統計區中心點Y\"), crs = 3824)\n```\n:::\n\n\nFilter the dengue data to only include the data from 發病日 30/07/2023 to 16/12/2023 or epiweek 31 to 50 because this is our area of interest. This will speed up the data processing time by reducing the amount of data we are working with.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\ndengue = dengue %>% filter(year(發病日) == 2023) %>% filter(epiweek(發病日) >=31 & epiweek(發病日)<= 50)\n```\n:::\n\n\nGetting the intersection of dengue and the village data so that we can get the dengue data that is within the village boundary\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\n\ndengue = st_intersection(dengue, village)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\ndengue <- dengue %>%\n  mutate(week = lubridate::epiweek(發病日))\n```\n:::\n\n\nVisualising the village and final dengue data onto a map\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#i want to plot dengue and village together using tmap\n\ntm_shape(village) +\n  tm_polygons() +\n  tm_shape(dengue) +\n  tm_dots(col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nThe diagram above shows that our dengue data is within the village boundary and most of the dengue cases are concentrated in the city center.However, this is just a preliminary visualization, we will perform a more detailed analysis to understand the spatial distribution of the dengue cases in Tainan City.\n\nThe code below will get all the dengue observations data that are within the village boundary\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\ndengue_boundary = st_join(village, dengue, join = st_contains)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\ndengue_boundary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 18817 features and 22 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\nFirst 10 features:\n     VILLCODE.x COUNTYNAME.x TOWNNAME.x VILLNAME.x    VILLENG.x COUNTYID.x\n1   67000350032       臺南市     安南區     青草里 Qingcao Vil.          D\n1.1 67000350032       臺南市     安南區     青草里 Qingcao Vil.          D\n2   67000270011       臺南市     仁德區     保安里  Bao'an Vil.          D\n2.1 67000270011       臺南市     仁德區     保安里  Bao'an Vil.          D\n2.2 67000270011       臺南市     仁德區     保安里  Bao'an Vil.          D\n2.3 67000270011       臺南市     仁德區     保安里  Bao'an Vil.          D\n2.4 67000270011       臺南市     仁德區     保安里  Bao'an Vil.          D\n2.5 67000270011       臺南市     仁德區     保安里  Bao'an Vil.          D\n2.6 67000270011       臺南市     仁德區     保安里  Bao'an Vil.          D\n2.7 67000270011       臺南市     仁德區     保安里  Bao'an Vil.          D\n    COUNTYCODE.x TOWNID.x TOWNCODE.x NOTE.x     發病日  VILLCODE.y COUNTYNAME.y\n1          67000      D06   67000350   <NA> 2023-09-14 67000350032       臺南市\n1.1        67000      D06   67000350   <NA> 2023-10-12 67000350032       臺南市\n2          67000      D32   67000270   <NA> 2023-08-04 67000270011       臺南市\n2.1        67000      D32   67000270   <NA> 2023-09-10 67000270011       臺南市\n2.2        67000      D32   67000270   <NA> 2023-09-11 67000270011       臺南市\n2.3        67000      D32   67000270   <NA> 2023-09-16 67000270011       臺南市\n2.4        67000      D32   67000270   <NA> 2023-09-19 67000270011       臺南市\n2.5        67000      D32   67000270   <NA> 2023-09-20 67000270011       臺南市\n2.6        67000      D32   67000270   <NA> 2023-09-27 67000270011       臺南市\n2.7        67000      D32   67000270   <NA> 2023-09-29 67000270011       臺南市\n    TOWNNAME.y VILLNAME.y    VILLENG.y COUNTYID.y COUNTYCODE.y TOWNID.y\n1       安南區     青草里 Qingcao Vil.          D        67000      D06\n1.1     安南區     青草里 Qingcao Vil.          D        67000      D06\n2       仁德區     保安里  Bao'an Vil.          D        67000      D32\n2.1     仁德區     保安里  Bao'an Vil.          D        67000      D32\n2.2     仁德區     保安里  Bao'an Vil.          D        67000      D32\n2.3     仁德區     保安里  Bao'an Vil.          D        67000      D32\n2.4     仁德區     保安里  Bao'an Vil.          D        67000      D32\n2.5     仁德區     保安里  Bao'an Vil.          D        67000      D32\n2.6     仁德區     保安里  Bao'an Vil.          D        67000      D32\n2.7     仁德區     保安里  Bao'an Vil.          D        67000      D32\n    TOWNCODE.y NOTE.y week                       geometry\n1     67000350   <NA>   37 POLYGON ((120.1176 23.08387...\n1.1   67000350   <NA>   41 POLYGON ((120.1176 23.08387...\n2     67000270   <NA>   31 POLYGON ((120.2304 22.93544...\n2.1   67000270   <NA>   37 POLYGON ((120.2304 22.93544...\n2.2   67000270   <NA>   37 POLYGON ((120.2304 22.93544...\n2.3   67000270   <NA>   37 POLYGON ((120.2304 22.93544...\n2.4   67000270   <NA>   38 POLYGON ((120.2304 22.93544...\n2.5   67000270   <NA>   38 POLYGON ((120.2304 22.93544...\n2.6   67000270   <NA>   39 POLYGON ((120.2304 22.93544...\n2.7   67000270   <NA>   39 POLYGON ((120.2304 22.93544...\n```\n:::\n:::\n\n\nHere we group the data by the village and then summarize the number of dengue cases in each village. This will give us the total number of dengue cases in each village.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\ndengue_boundary = st_join(village, dengue_boundary, join = st_contains) %>% group_by (VILLENG.x) %>% summarize(total_cases= n())\n```\n:::\n\n\n# 6.0 Store the data into rds file.\n\nThis will greatly reduce the time it takes to load the data in the future.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\nwrite_rds(dengue, \"data/rds/dengue.rds\")\nwrite_rds(dengue_boundary, \"data/rds/dengue_boundary.rds\")\nwrite_rds(village, \"data/rds/village.rds\")\n```\n:::\n\n\n# 7.0 Visualising the number of dengue cases by village using a choropleth map\n\nFirst, we will read the data from the rds file\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue = read_rds(\"data/rds/dengue.rds\")\ndengue_boundary = read_rds(\"data/rds/dengue_boundary.rds\")\nvillage = read_rds(\"data/rds/village.rds\")\n```\n:::\n\n\nThe code below will generate a choropleth map of the number of dengue cases in each village\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(dengue_boundary) + \n  tm_polygons(\"total_cases\") + \n  tm_layout(main.title = \"Number of dengue cases in each Village\", \n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.55,\n            legend.width=0.45,\n            frame = TRUE) + \n  tm_borders(alpha=0.5)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nFrom the map above, we can see that the number of dengue cases is concentrated in the city center. With some villages having a high number of dengue cases and some having a low number of dengue cases. The next section will perform a spatial autocorrelation analysis to determine if the spatial distribution of the dengue cases is random or if there is a clustering or dispersed pattern.\n\n# 8.0 Global Spatial Autocorrelation Analysis\n\nWe will be performing spatial auto correlation analysis to asses if the spatial patterns are randomly distributed or having a clustering/ dispersed pattern.\n\nThe global spatial autocorrelation analysis will be performed using the `sfdep` package, using the Moran's I statistic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- dengue_boundary %>% mutate(nb = st_contiguity(geometry),\n                                        wt = st_weights(nb, \n                                                        style = \"W\"),\n                                        .before=1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 249 features and 4 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 249 × 5\n   nb        wt        VILLENG.x   total_cases                          geometry\n * <nb>      <list>    <chr>             <int>                     <POLYGON [°]>\n 1 <int [5]> <dbl [5]> Andong Vil.          67 ((120.2164 23.0404, 120.2154 23.…\n 2 <int [5]> <dbl [5]> Anfu Vil.           311 ((120.1932 23.0294, 120.1929 23.…\n 3 <int [7]> <dbl [7]> Anhe Vil.            73 ((120.2258 23.04424, 120.2219 23…\n 4 <int [3]> <dbl [3]> Ankang Vil.          97 ((120.2269 23.01413, 120.2274 23…\n 5 <int [4]> <dbl [4]> Anqing Vil.         111 ((120.2113 23.04414, 120.2111 23…\n 6 <int [3]> <dbl [3]> Anshun Vil.          34 ((120.2136 23.05601, 120.2136 23…\n 7 <int [8]> <dbl [8]> Anxi Vil.           110 ((120.2123 23.03689, 120.212 23.…\n 8 <int [5]> <dbl [5]> Bao'an Vil.          19 ((120.2304 22.93544, 120.2301 22…\n 9 <int [6]> <dbl [6]> Beihua Vil.          82 ((120.2034 23.00257, 120.2032 23…\n10 <int [4]> <dbl [4]> Beimen Vil.         249 ((120.2176 23.02032, 120.2173 23…\n# ℹ 239 more rows\n```\n:::\n:::\n\n\n## 8.1 Using Global Moran's I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q$total_cases,\n                  wm_q$nb,\n                  wm_q$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 12.062, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.440989474      -0.004032258       0.001361217 \n```\n:::\n:::\n\n\nThe test result shows that the Moran's I value is 0.2 and the p-value is 0.001. This indicates that there is a significant spatial autocorrelation in the number of dengue cases in Tainan City, in our interest of village studies.\n\n## 8.2 Using Global Moran's I with permutation\n\nHowever, this is not sufficient enough, the test should be conducted in permutation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_q$total_cases,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim=99)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.44099, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n:::\n:::\n\n\nThe global Moran's I value is 0.2 and the p-value is 0.001. This indicates that there is a significant spatial autocorrelation in the number of dengue cases in Tainan City, in our interest of village studies. This results is consistent with the previous test.\n\n# 9.0 Local Spatial Autocorrelation Analysis\n\nWe will now perform local spatial autocorrelation analysis to identify the clusters and outliers in the number of dengue cases in Tainan City. We will be using the `sfdep` package to perform the local spatial autocorrelation analysis.This analysis will go into the localised spatial patterns of the dengue cases in our interest of study.\n\n## 9.1 Computing the Local Indicator of Spatial Association (LISA)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- wm_q %>% mutate(local_moran = local_moran(\n  total_cases, nb, wt, nsim = 99),\n  .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n## 9.2 Visuaising local Moran’s I and p-value We will visualise the local spatial autocorrelation using a map together with the p value. This allows for the identification of the clusters and outliers in the number of dengue cases in Tainan City that are significant at the 0.05 level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\nm1 = tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nm2= tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(m1, m2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\nInterpreting Local Moran’s I (“ii”) together with p-value (“p_ii”) map, we can identify the following spatial patterns:\n\n-   There are many Clusters of villages which are associated with relatively high values of surrounding villages, but these values are mostly not significant except for a few villages.\n\n-   There are many outliers of villages which are associated with relatively low values of surrounding villages, these results are significant at the 0.05 level.\n\n-   The map also shows an outlier indicated in orange. This outlier is significant at the 0.05 level. This indicates that there are some villages that have a low number of dengue cases and are surrounded by villages with a high number of dengue cases.\n\n## 9.3 Visualising LISA map\n\nLISA map is a categorical map showing outliers and clusters. There are two types of outliers namely: High-Low and Low-High outliers. Likewise, there are two type of clusters namely: High-High and Low-Low clusters. In fact, LISA map is an interpreted map by combining local Moran’s I of geographical areas and their respective p-values.\n\nIn lisa sf data.frame, we can find three fields contain the LISA categories. They are mean, median and pysal. In general, classification in mean will be used as shown in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <- lisa  %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\nFrom the graph above, we can see a few High-High and Low-Low clusters. This indicates that there are some villages that have a high number of dengue cases and some villages that have a low number of dengue cases. The next section will perform an emerging hotspot analysis to identify the emerging hot spot/cold spot areas in Tainan City.\n\n-   The villages shaded in turquoise is made up of “low-low” clusters, forming clusters of low numbers of dengue cases.These are usually located at the boundary of the city.\n\n-   While the villages in red make up significant clusters of “high-high” values, implying the clusters are mostly high number of dengue cases\n\n-   There are some villages in purple, showing that they are villages with low numbers of dengue cases, surrounding the villages with higher numbers of dengue cases.\n\n# 10.0 Emerging Hotspot Analysis (EHSA)\n\nEmerging hotspot analysis is a method used to identify the emerging hot spot/cold spot areas in a study area. We will be using the `sfdep` package to perform the emerging hot spot analysis.\n\n-   This is useful in our case to determine the possible hot spot of dengue cases in Tainan City so that the local government can take preventive measures to reduce the spread of dengue fever.\n\n-   This study also allows us to uncover patterns of these hot-spots and cold spot, so as to better understand the spatial distribution of dengue cases in Tainan City.\n\n## 10.1 Creating a Time Series Cube\n\nThe code below will group the dengue data that with have according to the TOWNNAME, VILLNAME, week and then summarise them by the total number of occurances which is the cases\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\ndengue_epi = dengue %>% \n  group_by(TOWNNAME, VILLNAME, week) %>% \n  summarize(cases=n())\n```\n:::\n\n\nStoring the dengue_epi into an rds file to reduce computational time\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(dengue_epi, \"data/rds/dengue_epi.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_epi = read_rds(\"data/rds/dengue_epi.rds\")\n```\n:::\n\n\nThe data is then merged with the village data for the village data to contain the cases count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerge_village = st_join(dengue_epi, village)\n```\n:::\n\n\nWe will then select the columns VILLCODE, week and cases from the merge_village data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerge_village = merge_village %>% select(VILLCODE, week, cases)\n```\n:::\n\n\nWe will then proceed with the data processing needed to create a space time cube. Considering all possible permutations of VILLCODE and week, we will then merge the data with the original dataframe and replace missing total_cases with NA values to 0. The final records should have 258 x 20 = 5160 records.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique_villcodes <- unique(village$VILLCODE)\nunique_weeks <- rep(31:50)\n\nall_combinations <- expand.grid(VILLCODE = unique_villcodes, week = unique_weeks)\n\n# Convert VILLCODE to character type (if it's not already)\nall_combinations$VILLCODE <- as.character(all_combinations$VILLCODE)\n\n# Merge with the original dataframe\ndf_merged <- merge(all_combinations, merge_village, by = c(\"VILLCODE\", \"week\"), all.x = TRUE)\n\n# Replace missing total_cases with 0\n\ndf_merged$cases = replace_na(df_merged$cases, 0)\n```\n:::\n\n\nWe will then convert the df_merged to a tibble so that the spacetime function can be performed\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_merged = as_tibble(df_merged)\n```\n:::\n\n\nThe code below performs the spacetime function\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_st <- spacetime(df_merged, village,\n         .loc_col = \"VILLCODE\",.time_col = \"week\")\n```\n:::\n\n\nChecking if the dataset is indeed a spacetime cube. The code below will return TRUE if the dataset is a spacetime cube\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(dengue_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n## 10.2 Deriving Spatial Weight Matrix\n\nAs usual, we will need to derive a spatial weight matrix before we can compute local Gi\\* statistics. Code chunk below will be used to derive a spatial weight matrix by using sfdep functions and tidyverse approach.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_nb <- dengue_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n\n## 10.3 Computing Local Gi\\* Statistics\n\nThis section will focus on calculatin gthe Gi\\*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars <- dengue_nb %>%\n  group_by(`week`) %>%\n  mutate(gi_star = local_gstar_perm(\n    cases, nb, wt)) %>%\n  unnest(gi_star)\n```\n:::\n\n\nThe results of gi_stars will be displayed below\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,160 × 14\n# Groups:   week [20]\n   VILLCODE     week cases                  geometry nb    wt    gi_star    e_gi\n   <chr>       <int> <int>            <GEOMETRY [°]> <lis> <lis>   <dbl>   <dbl>\n 1 67000350032    31     0  GEOMETRYCOLLECTION EMPTY <int> <dbl>  -0.815 0.00205\n 2 67000270011    31     1 POINT (120.2413 22.92115) <int> <dbl>   0.281 0.00375\n 3 67000370005    31     0  GEOMETRYCOLLECTION EMPTY <int> <dbl>  -0.463 0.00293\n 4 67000330004    31     0  GEOMETRYCOLLECTION EMPTY <int> <dbl>  -0.256 0.00273\n 5 67000350028    31     0  GEOMETRYCOLLECTION EMPTY <int> <dbl>  -0.895 0.00242\n 6 67000350030    31     0  GEOMETRYCOLLECTION EMPTY <int> <dbl>  -1.10  0.00280\n 7 67000370009    31     0  GEOMETRYCOLLECTION EMPTY <int> <dbl>  -0.895 0.00251\n 8 67000350017    31     0  GEOMETRYCOLLECTION EMPTY <int> <dbl>  -0.745 0.00325\n 9 67000350049    31     0  GEOMETRYCOLLECTION EMPTY <int> <dbl>   0.420 0.00296\n10 67000350018    31     0  GEOMETRYCOLLECTION EMPTY <int> <dbl>  -0.907 0.00278\n# ℹ 5,150 more rows\n# ℹ 6 more variables: var_gi <dbl>, p_value <dbl>, p_sim <dbl>,\n#   p_folded_sim <dbl>, skewness <dbl>, kurtosis <dbl>\n```\n:::\n:::\n\n\n## 10.4 Mann-Kendall Test\n\nThe Gi\\* allows us to conduct trend analysis using the Mann-Kendall test. The code chunk below uses location Hainan Vil. , D06\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg <- gi_stars %>% \n  ungroup() %>%\n  filter(VILLCODE == \"67000270011\") %>%\n  select(VILLCODE, `week`, gi_star)\n```\n:::\n\n\nNext, we plot the result by using ggplot2 functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = cbg, \n       aes(x = `week`, \n           y = gi_star)) +\n  geom_line() +\n  geom_line(y = 0) \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\nFrom the visual above, we can conclude that there are 2 hot-spots located at the beginning and the end of our epidemiology week of study.\n\nWe can also perform an interactive plot using the plotly package\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(data = cbg,\n            aes(x = `week`,\n                y = gi_star)) +\n  geom_line() +\n  geom_line(y = 0)\nggplotly(p)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-2f72ce6e1356df0e6dbd\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2f72ce6e1356df0e6dbd\">{\"x\":{\"data\":[{\"x\":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"y\":[0.28149943923759674,-0.64635332607618201,-1.0470355910647247,-1.0109932627693536,-1.648949387579183,-1.7411145852170484,-1.874601025644566,-1.9453998574154465,-1.732089794439875,-2.0774396939491284,-1.670389926758167,-1.6788144645541574,-1.7953344491110184,-2.098247243823991,-2.1092845685591022,-2.017685444448742,-0.59217278358979397,-0.8566174837431062,-0.15302051479043507,0.49287796133018957],\"text\":[\"week: 31<br />gi_star:  0.2814994\",\"week: 32<br />gi_star: -0.6463533\",\"week: 33<br />gi_star: -1.0470356\",\"week: 34<br />gi_star: -1.0109933\",\"week: 35<br />gi_star: -1.6489494\",\"week: 36<br />gi_star: -1.7411146\",\"week: 37<br />gi_star: -1.8746010\",\"week: 38<br />gi_star: -1.9453999\",\"week: 39<br />gi_star: -1.7320898\",\"week: 40<br />gi_star: -2.0774397\",\"week: 41<br />gi_star: -1.6703899\",\"week: 42<br />gi_star: -1.6788145\",\"week: 43<br />gi_star: -1.7953344\",\"week: 44<br />gi_star: -2.0982472\",\"week: 45<br />gi_star: -2.1092846\",\"week: 46<br />gi_star: -2.0176854\",\"week: 47<br />gi_star: -0.5921728\",\"week: 48<br />gi_star: -0.8566175\",\"week: 49<br />gi_star: -0.1530205\",\"week: 50<br />gi_star:  0.4928780\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"y\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"text\":[\"week: 31<br />gi_star: 0\",\"week: 32<br />gi_star: 0\",\"week: 33<br />gi_star: 0\",\"week: 34<br />gi_star: 0\",\"week: 35<br />gi_star: 0\",\"week: 36<br />gi_star: 0\",\"week: 37<br />gi_star: 0\",\"week: 38<br />gi_star: 0\",\"week: 39<br />gi_star: 0\",\"week: 40<br />gi_star: 0\",\"week: 41<br />gi_star: 0\",\"week: 42<br />gi_star: 0\",\"week: 43<br />gi_star: 0\",\"week: 44<br />gi_star: 0\",\"week: 45<br />gi_star: 0\",\"week: 46<br />gi_star: 0\",\"week: 47<br />gi_star: 0\",\"week: 48<br />gi_star: 0\",\"week: 49<br />gi_star: 0\",\"week: 50<br />gi_star: 0\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":48.949771689497723},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[30.050000000000001,50.950000000000003],\"tickmode\":\"array\",\"ticktext\":[\"35\",\"40\",\"45\",\"50\"],\"tickvals\":[35,40,45,50],\"categoryorder\":\"array\",\"categoryarray\":[\"35\",\"40\",\"45\",\"50\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"week\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-2.2393926950535668,0.62298608782465414],\"tickmode\":\"array\",\"ticktext\":[\"-2.0\",\"-1.5\",\"-1.0\",\"-0.5\",\"0.0\",\"0.5\"],\"tickvals\":[-2,-1.5,-1,-0.5,0,0.5],\"categoryorder\":\"array\",\"categoryarray\":[\"-2.0\",\"-1.5\",\"-1.0\",\"-0.5\",\"0.0\",\"0.5\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"gi_star\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"92386dba27d\":{\"x\":{},\"y\":{},\"type\":\"scatter\"},\"923866bf33cc\":{\"x\":{},\"y\":{}}},\"cur_data\":\"92386dba27d\",\"visdat\":{\"92386dba27d\":[\"function (y) \",\"x\"],\"923866bf33cc\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## 10.5 Performing Emerging Hotspot Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\nehsa <- emerging_hotspot_analysis(\n  x = dengue_st, \n  .var = \"cases\", \n  k = 1, \n  nsim = 99\n)\n```\n:::\n\n\nIn the code above, the arguments:\n\n-   x is the spacetime object which is dengue_st\n\n-   .var is the variable we want to test which is cases\n\n-   k = nsim is the last simulations we want to stop run (we start at the 0th simulation), we will be running the simulation 100 times\n\nWe will then store the ehsa into a rds file to reduce computational time\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#/ eval : False\nwrite_rds(ehsa, \"data/rds/ehsa.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa = read_rds(\"data/rds/ehsa.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ehsa)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  location      tau  p_value classification      \n  <chr>       <dbl>    <dbl> <chr>               \n1 67000350032 0.411 0.0125   sporadic coldspot   \n2 67000270011 0.358 0.0297   consecutive coldspot\n3 67000370005 0.579 0.000406 consecutive hotspot \n4 67000330004 0.421 0.0104   oscilating hotspot  \n5 67000350028 0.537 0.00105  no pattern detected \n6 67000350030 0.526 0.00132  consecutive hotspot \n```\n:::\n:::\n\n\nFrom the visualization, it seems like all villages have different pattern detected in terms of distribution. How significant is this result though?\n\n## 10.6 Visualizing the distribution of EHSA classes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa,\n       aes(x=classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n## 10.7 Visualizing EHSA\n\nTo examine the significance of the concluded pattern for all the villages, we need to compare it with its p value. We can visualize the EHSA and it’s p-value.\n\nFirstly, we derive the EHSA of each village by using left_join() from the **dplyr** package to insert the EHSA values to each village in our study area so that we can plot the EHSA and its p-value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_ehsa = village %>% left_join(ehsa, join_by (VILLCODE==location))\n```\n:::\n\n\nThen, we use **tmap** functions to create the choropleth map.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig <- dengue_ehsa %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(dengue_ehsa) + \n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(ehsa_sig) + \n  tm_fill(\"classification\") +\n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n\nThe most number of cases with pattern belong to the **oscillating hot spots** followed by **oscillating cold spots** class. Oscillating hotspot are villages witnessing regular fluctuations in dengue cases with predictable peaks while oscillating coldspot are villages with consistent dengue case fluctuations, but at lower levels compared to busier regions.\n\nThe data seems to exhibit many different pattern classes. The different pattern explaination are as follows:\n\n-   **Consecutive Coldspot:** villages consistently experiencing low dengue cases over an extended period, often without significant fluctuations.\n\n-   **Sporadic Coldspot:** villages in potentially busy regions experiencing inconsistent and sporadic dengue cases.\n\n-   **Sporadic Hotspot:** villages witnessing occasional but significant spikes in dengue cases.\n\n-   **No Pattern Detected:** villages where no clear pattern in dengue cases is discernible over time.\n\n# 11.0 Reflection\n\nThis take home exercise has been a great learning experience. Not everytime we can have the opporunity to work with data so close to solving real world problem. The data may seem simple but it taught me not to judge a book by its cover because there are many steps involved in the data wrangling phased.\n\nThis take home exercise allowed me to analyses patterns and its significance at a much deeper level which I think is important in today's day and age. I am also confident that my data cleaning skills have improved quite abit\n\nRegarding the findings, we can see that high number dengue cases are located within the city centre with High-High and low number of dengue clusters can be found at the boundary of the city. This is important information for the local government to take preventive measures to reduce the spread of dengue fever. The Government should also take note of the emerging hot spot/cold spot areas in Tainan City that were identified above so that they can take preventive measures to reduce the occurrence of it.\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\r\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}